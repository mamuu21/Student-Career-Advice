--
-- PostgreSQL database dump
--

-- Dumped from database version 15.1
-- Dumped by pg_dump version 15.1

CREATE DATABASE career;

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- Name: auth_group; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group (
    id integer NOT NULL,
    name character varying(150) NOT NULL
);


ALTER TABLE public.auth_group OWNER TO postgres;

--
-- Name: auth_group_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_group_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_group_permissions (
    id bigint NOT NULL,
    group_id integer NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.auth_group_permissions OWNER TO postgres;

--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_group_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_group_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: auth_permission; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.auth_permission (
    id integer NOT NULL,
    name character varying(255) NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) NOT NULL
);


ALTER TABLE public.auth_permission OWNER TO postgres;

--
-- Name: auth_permission_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.auth_permission ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.auth_permission_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_admin_log; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_admin_log (
    id integer NOT NULL,
    action_time timestamp with time zone NOT NULL,
    object_id text,
    object_repr character varying(200) NOT NULL,
    action_flag smallint NOT NULL,
    change_message text NOT NULL,
    content_type_id integer,
    user_id bigint NOT NULL,
    CONSTRAINT django_admin_log_action_flag_check CHECK ((action_flag >= 0))
);


ALTER TABLE public.django_admin_log OWNER TO postgres;

--
-- Name: django_admin_log_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_admin_log ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_admin_log_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_content_type; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_content_type (
    id integer NOT NULL,
    app_label character varying(100) NOT NULL,
    model character varying(100) NOT NULL
);


ALTER TABLE public.django_content_type OWNER TO postgres;

--
-- Name: django_content_type_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_content_type ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_content_type_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_migrations; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_migrations (
    id bigint NOT NULL,
    app character varying(255) NOT NULL,
    name character varying(255) NOT NULL,
    applied timestamp with time zone NOT NULL
);


ALTER TABLE public.django_migrations OWNER TO postgres;

--
-- Name: django_migrations_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.django_migrations ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.django_migrations_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: django_session; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.django_session (
    session_key character varying(40) NOT NULL,
    session_data text NOT NULL,
    expire_date timestamp with time zone NOT NULL
);


ALTER TABLE public.django_session OWNER TO postgres;

--
-- Name: scaapp_advisor; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scaapp_advisor (
    user_id bigint NOT NULL,
    profession character varying(50) NOT NULL
);


ALTER TABLE public.scaapp_advisor OWNER TO postgres;

--
-- Name: scaapp_advisor_advice; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scaapp_advisor_advice (
    id bigint NOT NULL,
    advice_id bigint NOT NULL,
    advisor_id bigint NOT NULL
);


ALTER TABLE public.scaapp_advisor_advice OWNER TO postgres;

--
-- Name: scaapp_advisor_advice_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.scaapp_advisor_advice ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.scaapp_advisor_advice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: scaapp_answer; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scaapp_answer (
    id bigint NOT NULL,
    text text NOT NULL,
    question_id bigint NOT NULL
);


ALTER TABLE public.scaapp_answer OWNER TO postgres;

--
-- Name: scaapp_answer_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.scaapp_answer ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.scaapp_answer_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: scaapp_careeradvice; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scaapp_careeradvice (
    id bigint NOT NULL,
    name character varying(255),
    content text NOT NULL,
    content1 text,
    content2 text,
    content3 text,
    image character varying(100),
    created_at timestamp with time zone NOT NULL
);


ALTER TABLE public.scaapp_careeradvice OWNER TO postgres;

--
-- Name: scaapp_careeradvice_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.scaapp_careeradvice ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.scaapp_careeradvice_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: scaapp_question; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scaapp_question (
    id bigint NOT NULL,
    text text NOT NULL,
    email character varying(254)
);


ALTER TABLE public.scaapp_question OWNER TO postgres;

--
-- Name: scaapp_question_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.scaapp_question ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.scaapp_question_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: scaapp_student; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scaapp_student (
    user_id bigint NOT NULL
);


ALTER TABLE public.scaapp_student OWNER TO postgres;

--
-- Name: scaapp_student_question; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scaapp_student_question (
    id bigint NOT NULL,
    question_id bigint NOT NULL,
    studdent_id bigint NOT NULL
);


ALTER TABLE public.scaapp_student_question OWNER TO postgres;

--
-- Name: scaapp_student_question_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.scaapp_student_question ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.scaapp_student_question_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: scaapp_user; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scaapp_user (
    id bigint NOT NULL,
    password character varying(128) NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) NOT NULL,
    first_name character varying(150) NOT NULL,
    last_name character varying(150) NOT NULL,
    email character varying(254) NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    is_student boolean NOT NULL,
    is_advisor boolean NOT NULL,
    phone_number character varying(15)
);


ALTER TABLE public.scaapp_user OWNER TO postgres;

--
-- Name: scaapp_user_groups; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scaapp_user_groups (
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    group_id integer NOT NULL
);


ALTER TABLE public.scaapp_user_groups OWNER TO postgres;

--
-- Name: scaapp_user_groups_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.scaapp_user_groups ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.scaapp_user_groups_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: scaapp_user_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.scaapp_user ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.scaapp_user_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: scaapp_user_user_permissions; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.scaapp_user_user_permissions (
    id bigint NOT NULL,
    user_id bigint NOT NULL,
    permission_id integer NOT NULL
);


ALTER TABLE public.scaapp_user_user_permissions OWNER TO postgres;

--
-- Name: scaapp_user_user_permissions_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.scaapp_user_user_permissions ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.scaapp_user_user_permissions_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: taggit_tag; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.taggit_tag (
    id integer NOT NULL,
    name character varying(100) NOT NULL,
    slug character varying(100) NOT NULL
);


ALTER TABLE public.taggit_tag OWNER TO postgres;

--
-- Name: taggit_tag_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.taggit_tag ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.taggit_tag_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: taggit_taggeditem; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.taggit_taggeditem (
    id integer NOT NULL,
    object_id integer NOT NULL,
    content_type_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE public.taggit_taggeditem OWNER TO postgres;

--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.taggit_taggeditem ALTER COLUMN id ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME public.taggit_taggeditem_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Data for Name: auth_group; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group (id, name) FROM stdin;
\.


--
-- Data for Name: auth_group_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_group_permissions (id, group_id, permission_id) FROM stdin;
\.


--
-- Data for Name: auth_permission; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.auth_permission (id, name, content_type_id, codename) FROM stdin;
1	Can add log entry	1	add_logentry
2	Can change log entry	1	change_logentry
3	Can delete log entry	1	delete_logentry
4	Can view log entry	1	view_logentry
5	Can add permission	2	add_permission
6	Can change permission	2	change_permission
7	Can delete permission	2	delete_permission
8	Can view permission	2	view_permission
9	Can add group	3	add_group
10	Can change group	3	change_group
11	Can delete group	3	delete_group
12	Can view group	3	view_group
13	Can add content type	4	add_contenttype
14	Can change content type	4	change_contenttype
15	Can delete content type	4	delete_contenttype
16	Can view content type	4	view_contenttype
17	Can add session	5	add_session
18	Can change session	5	change_session
19	Can delete session	5	delete_session
20	Can view session	5	view_session
21	Can add user	6	add_user
22	Can change user	6	change_user
23	Can delete user	6	delete_user
24	Can view user	6	view_user
25	Can add question	7	add_question
26	Can change question	7	change_question
27	Can delete question	7	delete_question
28	Can view question	7	view_question
29	Can add advisor	8	add_advisor
30	Can change advisor	8	change_advisor
31	Can delete advisor	8	delete_advisor
32	Can view advisor	8	view_advisor
33	Can add student	9	add_student
34	Can change student	9	change_student
35	Can delete student	9	delete_student
36	Can view student	9	view_student
37	Can add career advice	10	add_careeradvice
38	Can change career advice	10	change_careeradvice
39	Can delete career advice	10	delete_careeradvice
40	Can view career advice	10	view_careeradvice
41	Can add answer	11	add_answer
42	Can change answer	11	change_answer
43	Can delete answer	11	delete_answer
44	Can view answer	11	view_answer
45	Can add advisor_ advice	12	add_advisor_advice
46	Can change advisor_ advice	12	change_advisor_advice
47	Can delete advisor_ advice	12	delete_advisor_advice
48	Can view advisor_ advice	12	view_advisor_advice
49	Can add student_ question	13	add_student_question
50	Can change student_ question	13	change_student_question
51	Can delete student_ question	13	delete_student_question
52	Can view student_ question	13	view_student_question
53	Can add tag	14	add_tag
54	Can change tag	14	change_tag
55	Can delete tag	14	delete_tag
56	Can view tag	14	view_tag
57	Can add tagged item	15	add_taggeditem
58	Can change tagged item	15	change_taggeditem
59	Can delete tagged item	15	delete_taggeditem
60	Can view tagged item	15	view_taggeditem
\.


--
-- Data for Name: django_admin_log; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_admin_log (id, action_time, object_id, object_repr, action_flag, change_message, content_type_id, user_id) FROM stdin;
1	2023-02-01 17:22:47.533473+05	1	Computer Engineering	1	[{"added": {}}]	10	1
2	2023-02-01 17:23:39.365228+05	2	Electrical Engineering	1	[{"added": {}}]	10	1
3	2023-02-01 17:24:19.166423+05	3	Civil Engineering	1	[{"added": {}}]	10	1
4	2023-02-01 17:25:22.847538+05	4	Mechanical Engineering	1	[{"added": {}}]	10	1
5	2023-02-01 17:26:25.290276+05	5	Dentist	1	[{"added": {}}]	10	1
6	2023-02-01 17:27:44.49383+05	6	Physician	1	[{"added": {}}]	10	1
7	2023-02-06 20:52:23.878898+05	7	Accounting	1	[{"added": {}}]	10	1
8	2023-02-06 20:52:57.791293+05	8	Finance	1	[{"added": {}}]	10	1
9	2023-02-06 20:53:54.392768+05	9	Sales Management	1	[{"added": {}}]	10	1
\.


--
-- Data for Name: django_content_type; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_content_type (id, app_label, model) FROM stdin;
1	admin	logentry
2	auth	permission
3	auth	group
4	contenttypes	contenttype
5	sessions	session
6	scaapp	user
7	scaapp	question
8	scaapp	advisor
9	scaapp	student
10	scaapp	careeradvice
11	scaapp	answer
12	scaapp	advisor_advice
13	scaapp	student_question
14	taggit	tag
15	taggit	taggeditem
\.


--
-- Data for Name: django_migrations; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_migrations (id, app, name, applied) FROM stdin;
1	contenttypes	0001_initial	2023-02-01 17:19:46.295596+05
2	taggit	0001_initial	2023-02-01 17:19:46.342939+05
3	taggit	0002_auto_20150616_2121	2023-02-01 17:19:46.342939+05
4	contenttypes	0002_remove_content_type_name	2023-02-01 17:19:46.358567+05
5	taggit	0003_taggeditem_add_unique_index	2023-02-01 17:19:46.358567+05
6	taggit	0004_alter_taggeditem_content_type_alter_taggeditem_tag	2023-02-01 17:19:46.374186+05
7	taggit	0005_auto_20220424_2025	2023-02-01 17:19:46.374186+05
8	auth	0001_initial	2023-02-01 17:19:46.421069+05
9	auth	0002_alter_permission_name_max_length	2023-02-01 17:19:46.437687+05
10	auth	0003_alter_user_email_max_length	2023-02-01 17:19:46.437687+05
11	auth	0004_alter_user_username_opts	2023-02-01 17:19:46.452696+05
12	auth	0005_alter_user_last_login_null	2023-02-01 17:19:46.452696+05
13	auth	0006_require_contenttypes_0002	2023-02-01 17:19:46.452696+05
14	auth	0007_alter_validators_add_error_messages	2023-02-01 17:19:46.468326+05
15	auth	0008_alter_user_username_max_length	2023-02-01 17:19:46.468326+05
16	auth	0009_alter_user_last_name_max_length	2023-02-01 17:19:46.483949+05
17	auth	0010_alter_group_name_max_length	2023-02-01 17:19:46.483949+05
18	auth	0011_update_proxy_permissions	2023-02-01 17:19:46.499566+05
19	auth	0012_alter_user_first_name_max_length	2023-02-01 17:19:46.499566+05
20	scaapp	0001_initial	2023-02-01 17:19:46.672247+05
21	admin	0001_initial	2023-02-01 17:19:46.69699+05
22	admin	0002_logentry_remove_auto_add	2023-02-01 17:19:46.717563+05
23	admin	0003_logentry_add_action_flag_choices	2023-02-01 17:19:46.726779+05
24	scaapp	0002_remove_careeradvice_created_at	2023-02-01 17:19:46.734759+05
25	scaapp	0003_careeradvice_created_at	2023-02-01 17:19:46.744252+05
26	sessions	0001_initial	2023-02-01 17:19:46.770955+05
27	scaapp	0004_question_email	2023-02-02 20:11:22.545435+05
\.


--
-- Data for Name: django_session; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.django_session (session_key, session_data, expire_date) FROM stdin;
qqcca6ihz8o1uneu1jmplwyq7tumcaxo	.eJxVjEEOwiAQRe_C2pCWMhRcuvcMZIYZpGpoUtqV8e7apAvd_vfef6mI21ri1mSJE6uz6tXpdyNMD6k74DvW26zTXNdlIr0r-qBNX2eW5-Vw_w4KtvKtaaQuJMMMPWci8CYMLhGLFRfQeGNlQAgEnLPzwN50frToEyYmEFLvDwUYOP4:1pPG8l:OitNXwXLPAkjekEqQ7jOTnzqRFZBrxB4rHORWcqlDo0	2023-02-21 10:03:35.43958+05
\.


--
-- Data for Name: scaapp_advisor; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scaapp_advisor (user_id, profession) FROM stdin;
\.


--
-- Data for Name: scaapp_advisor_advice; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scaapp_advisor_advice (id, advice_id, advisor_id) FROM stdin;
\.


--
-- Data for Name: scaapp_answer; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scaapp_answer (id, text, question_id) FROM stdin;
\.


--
-- Data for Name: scaapp_careeradvice; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scaapp_careeradvice (id, name, content, content1, content2, content3, image, created_at) FROM stdin;
1	Computer Engineering	Computer engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	images/compeng_GQAf8DF.jpg	2023-02-01 17:22:47.517642+05
2	Electrical Engineering	Electrical engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Electrical engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Electrical engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Electrical engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	images/course-2_alTqUwi.jpg	2023-02-01 17:23:39.356464+05
3	Civil Engineering	Civil engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Civil engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Civil engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Civil engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	images/civileng_6oZwST9.jpg	2023-02-01 17:24:19.157616+05
4	Mechanical Engineering	Mechanical engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Mechanical engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Mechanical engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Mechanical engineers design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	images/course-2_alTqUwi_6aZ2Uip.jpg	2023-02-01 17:25:22.839473+05
5	Dentist	Dentist design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Dentist design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Dentist design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Dentist design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	images/dentist_1gQUhkE.jpg	2023-02-01 17:26:25.281047+05
6	Physician	Doctor design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Doctor design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Doctor design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	Doctor design, build, and test hardware components and systems.\r\n                            A computer engineer works with software developers to ensure the hardware and\r\n                            software work in tandem while balancing factors such as performance and material cost.	images/physician_MtSbtzj_5LJsCsW.jpg	2023-02-01 17:27:44.485928+05
7	Accounting	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	images/civileng_GH7dVp8.jpg	2023-02-06 20:52:23.821862+05
8	Finance	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	images/events-2_EOduBuh.jpg	2023-02-06 20:52:57.76038+05
9	Sales Management	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	Computer engineers design, build, and test hardware components and systems. A computer engineer works with software developers to ensure the hardware and software work in tandem while balancing factors such as performance and material cost.	images/33fc21f334e96d82ce99f12c04001ee7_3r1Gr5h.jpg	2023-02-06 20:53:54.36734+05
\.


--
-- Data for Name: scaapp_question; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scaapp_question (id, text, email) FROM stdin;
1	ssadasa	mariamumussa071@gmail.com
2	8o765r8t	tn@gmail.com
3	jkwehgiur	tn@gmail.com
4	jkwehgiur	tn@gmail.com
5	jkwehgiur	tn@gmail.com
6	jkwehgiur	tn@gmail.com
7	uierty9wiegh	tn@gmail.com
8	jhaegfayukfgifl	jhgs@gmail.com
\.


--
-- Data for Name: scaapp_student; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scaapp_student (user_id) FROM stdin;
\.


--
-- Data for Name: scaapp_student_question; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scaapp_student_question (id, question_id, studdent_id) FROM stdin;
\.


--
-- Data for Name: scaapp_user; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scaapp_user (id, password, last_login, is_superuser, username, first_name, last_name, email, is_staff, is_active, date_joined, is_student, is_advisor, phone_number) FROM stdin;
2	pbkdf2_sha256$390000$5TRU3BUqrPfLbxZ8CPxMFg$U2AfFJz85FsYr9Kis1lvXnnB898s9wnnmoPn6I4esbY=	\N	f	NDAGA				f	t	2023-02-03 16:38:30.817749+05	f	f	\N
4	pbkdf2_sha256$390000$Ic7M5kcLLOu1wIsPzkFJAm$MfmXNEUrfr1Vv675h8OcU+af0gERA4HQCOrwBnTO6dU=	2023-02-06 20:48:27.733275+05	f	tina				f	t	2023-02-06 20:48:13.496175+05	f	f	\N
3	pbkdf2_sha256$390000$kmrjbZj8ddRcvTOCleAahQ$0B70G+BF7xgxMIgffxDK+K16Ab90rObLk5bKW9fbtls=	2023-02-07 09:58:11.464707+05	f	mamuu				f	t	2023-02-03 16:42:34.704817+05	f	f	\N
1	pbkdf2_sha256$390000$5bhqcHMnY05ShOZNMUoSTf$cBy6geDbbn+PMwAg4fcj708hzksFI2gFn1FhamMQv2g=	2023-02-07 10:03:35.437696+05	t	admin				t	t	2023-02-01 17:20:11.117651+05	f	f	\N
\.


--
-- Data for Name: scaapp_user_groups; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scaapp_user_groups (id, user_id, group_id) FROM stdin;
\.


--
-- Data for Name: scaapp_user_user_permissions; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.scaapp_user_user_permissions (id, user_id, permission_id) FROM stdin;
\.


--
-- Data for Name: taggit_tag; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.taggit_tag (id, name, slug) FROM stdin;
1	Engineering	engineering
2	Health	health
3	Business	business
\.


--
-- Data for Name: taggit_taggeditem; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.taggit_taggeditem (id, object_id, content_type_id, tag_id) FROM stdin;
1	1	10	1
2	2	10	1
3	3	10	1
4	4	10	1
5	5	10	2
6	6	10	2
7	7	10	3
8	8	10	3
9	9	10	3
\.


--
-- Name: auth_group_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_id_seq', 1, false);


--
-- Name: auth_group_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_group_permissions_id_seq', 1, false);


--
-- Name: auth_permission_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.auth_permission_id_seq', 60, true);


--
-- Name: django_admin_log_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_admin_log_id_seq', 9, true);


--
-- Name: django_content_type_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_content_type_id_seq', 15, true);


--
-- Name: django_migrations_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.django_migrations_id_seq', 27, true);


--
-- Name: scaapp_advisor_advice_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.scaapp_advisor_advice_id_seq', 1, false);


--
-- Name: scaapp_answer_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.scaapp_answer_id_seq', 1, false);


--
-- Name: scaapp_careeradvice_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.scaapp_careeradvice_id_seq', 9, true);


--
-- Name: scaapp_question_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.scaapp_question_id_seq', 8, true);


--
-- Name: scaapp_student_question_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.scaapp_student_question_id_seq', 1, false);


--
-- Name: scaapp_user_groups_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.scaapp_user_groups_id_seq', 1, false);


--
-- Name: scaapp_user_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.scaapp_user_id_seq', 4, true);


--
-- Name: scaapp_user_user_permissions_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.scaapp_user_user_permissions_id_seq', 1, false);


--
-- Name: taggit_tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.taggit_tag_id_seq', 3, true);


--
-- Name: taggit_taggeditem_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.taggit_taggeditem_id_seq', 9, true);


--
-- Name: auth_group auth_group_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_name_key UNIQUE (name);


--
-- Name: auth_group_permissions auth_group_permissions_group_id_permission_id_0cd325b0_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id);


--
-- Name: auth_group_permissions auth_group_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id);


--
-- Name: auth_group auth_group_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group
    ADD CONSTRAINT auth_group_pkey PRIMARY KEY (id);


--
-- Name: auth_permission auth_permission_content_type_id_codename_01ab375a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename);


--
-- Name: auth_permission auth_permission_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_pkey PRIMARY KEY (id);


--
-- Name: django_admin_log django_admin_log_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_pkey PRIMARY KEY (id);


--
-- Name: django_content_type django_content_type_app_label_model_76bd3d3b_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model);


--
-- Name: django_content_type django_content_type_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_content_type
    ADD CONSTRAINT django_content_type_pkey PRIMARY KEY (id);


--
-- Name: django_migrations django_migrations_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_migrations
    ADD CONSTRAINT django_migrations_pkey PRIMARY KEY (id);


--
-- Name: django_session django_session_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_session
    ADD CONSTRAINT django_session_pkey PRIMARY KEY (session_key);


--
-- Name: scaapp_advisor_advice scaapp_advisor_advice_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_advisor_advice
    ADD CONSTRAINT scaapp_advisor_advice_pkey PRIMARY KEY (id);


--
-- Name: scaapp_advisor scaapp_advisor_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_advisor
    ADD CONSTRAINT scaapp_advisor_pkey PRIMARY KEY (user_id);


--
-- Name: scaapp_answer scaapp_answer_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_answer
    ADD CONSTRAINT scaapp_answer_pkey PRIMARY KEY (id);


--
-- Name: scaapp_careeradvice scaapp_careeradvice_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_careeradvice
    ADD CONSTRAINT scaapp_careeradvice_pkey PRIMARY KEY (id);


--
-- Name: scaapp_question scaapp_question_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_question
    ADD CONSTRAINT scaapp_question_pkey PRIMARY KEY (id);


--
-- Name: scaapp_student scaapp_student_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_student
    ADD CONSTRAINT scaapp_student_pkey PRIMARY KEY (user_id);


--
-- Name: scaapp_student_question scaapp_student_question_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_student_question
    ADD CONSTRAINT scaapp_student_question_pkey PRIMARY KEY (id);


--
-- Name: scaapp_user_groups scaapp_user_groups_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_user_groups
    ADD CONSTRAINT scaapp_user_groups_pkey PRIMARY KEY (id);


--
-- Name: scaapp_user_groups scaapp_user_groups_user_id_group_id_fdc42246_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_user_groups
    ADD CONSTRAINT scaapp_user_groups_user_id_group_id_fdc42246_uniq UNIQUE (user_id, group_id);


--
-- Name: scaapp_user scaapp_user_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_user
    ADD CONSTRAINT scaapp_user_pkey PRIMARY KEY (id);


--
-- Name: scaapp_user_user_permissions scaapp_user_user_permiss_user_id_permission_id_e400065a_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_user_user_permissions
    ADD CONSTRAINT scaapp_user_user_permiss_user_id_permission_id_e400065a_uniq UNIQUE (user_id, permission_id);


--
-- Name: scaapp_user_user_permissions scaapp_user_user_permissions_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_user_user_permissions
    ADD CONSTRAINT scaapp_user_user_permissions_pkey PRIMARY KEY (id);


--
-- Name: scaapp_user scaapp_user_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_user
    ADD CONSTRAINT scaapp_user_username_key UNIQUE (username);


--
-- Name: taggit_tag taggit_tag_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_name_key UNIQUE (name);


--
-- Name: taggit_tag taggit_tag_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_pkey PRIMARY KEY (id);


--
-- Name: taggit_tag taggit_tag_slug_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_tag
    ADD CONSTRAINT taggit_tag_slug_key UNIQUE (slug);


--
-- Name: taggit_taggeditem taggit_taggeditem_content_type_id_object_i_4bb97a8e_uniq; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_content_type_id_object_i_4bb97a8e_uniq UNIQUE (content_type_id, object_id, tag_id);


--
-- Name: taggit_taggeditem taggit_taggeditem_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_pkey PRIMARY KEY (id);


--
-- Name: auth_group_name_a6ea08ec_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_name_a6ea08ec_like ON public.auth_group USING btree (name varchar_pattern_ops);


--
-- Name: auth_group_permissions_group_id_b120cbf9; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_group_id_b120cbf9 ON public.auth_group_permissions USING btree (group_id);


--
-- Name: auth_group_permissions_permission_id_84c5c92e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_group_permissions_permission_id_84c5c92e ON public.auth_group_permissions USING btree (permission_id);


--
-- Name: auth_permission_content_type_id_2f476e4b; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX auth_permission_content_type_id_2f476e4b ON public.auth_permission USING btree (content_type_id);


--
-- Name: django_admin_log_content_type_id_c4bce8eb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_content_type_id_c4bce8eb ON public.django_admin_log USING btree (content_type_id);


--
-- Name: django_admin_log_user_id_c564eba6; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_admin_log_user_id_c564eba6 ON public.django_admin_log USING btree (user_id);


--
-- Name: django_session_expire_date_a5c62663; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_expire_date_a5c62663 ON public.django_session USING btree (expire_date);


--
-- Name: django_session_session_key_c0390e0f_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX django_session_session_key_c0390e0f_like ON public.django_session USING btree (session_key varchar_pattern_ops);


--
-- Name: scaapp_advisor_advice_advice_id_b487071e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX scaapp_advisor_advice_advice_id_b487071e ON public.scaapp_advisor_advice USING btree (advice_id);


--
-- Name: scaapp_advisor_advice_advisor_id_b2776bdb; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX scaapp_advisor_advice_advisor_id_b2776bdb ON public.scaapp_advisor_advice USING btree (advisor_id);


--
-- Name: scaapp_answer_question_id_e97d4a67; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX scaapp_answer_question_id_e97d4a67 ON public.scaapp_answer USING btree (question_id);


--
-- Name: scaapp_student_question_question_id_59864016; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX scaapp_student_question_question_id_59864016 ON public.scaapp_student_question USING btree (question_id);


--
-- Name: scaapp_student_question_studdent_id_ccab00a2; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX scaapp_student_question_studdent_id_ccab00a2 ON public.scaapp_student_question USING btree (studdent_id);


--
-- Name: scaapp_user_groups_group_id_598cde64; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX scaapp_user_groups_group_id_598cde64 ON public.scaapp_user_groups USING btree (group_id);


--
-- Name: scaapp_user_groups_user_id_9e82b6db; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX scaapp_user_groups_user_id_9e82b6db ON public.scaapp_user_groups USING btree (user_id);


--
-- Name: scaapp_user_user_permissions_permission_id_5a5f3a0e; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX scaapp_user_user_permissions_permission_id_5a5f3a0e ON public.scaapp_user_user_permissions USING btree (permission_id);


--
-- Name: scaapp_user_user_permissions_user_id_a69b2354; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX scaapp_user_user_permissions_user_id_a69b2354 ON public.scaapp_user_user_permissions USING btree (user_id);


--
-- Name: scaapp_user_username_a7f63aed_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX scaapp_user_username_a7f63aed_like ON public.scaapp_user USING btree (username varchar_pattern_ops);


--
-- Name: taggit_tag_name_58eb2ed9_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_tag_name_58eb2ed9_like ON public.taggit_tag USING btree (name varchar_pattern_ops);


--
-- Name: taggit_tag_slug_6be58b2c_like; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_tag_slug_6be58b2c_like ON public.taggit_tag USING btree (slug varchar_pattern_ops);


--
-- Name: taggit_taggeditem_content_type_id_9957a03c; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_taggeditem_content_type_id_9957a03c ON public.taggit_taggeditem USING btree (content_type_id);


--
-- Name: taggit_taggeditem_content_type_id_object_id_196cc965_idx; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_taggeditem_content_type_id_object_id_196cc965_idx ON public.taggit_taggeditem USING btree (content_type_id, object_id);


--
-- Name: taggit_taggeditem_object_id_e2d7d1df; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_taggeditem_object_id_e2d7d1df ON public.taggit_taggeditem USING btree (object_id);


--
-- Name: taggit_taggeditem_tag_id_f4f5b767; Type: INDEX; Schema: public; Owner: postgres
--

CREATE INDEX taggit_taggeditem_tag_id_f4f5b767 ON public.taggit_taggeditem USING btree (tag_id);


--
-- Name: auth_group_permissions auth_group_permissio_permission_id_84c5c92e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_group_permissions auth_group_permissions_group_id_b120cbf9_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: auth_permission auth_permission_content_type_id_2f476e4b_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_content_type_id_c4bce8eb_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: django_admin_log django_admin_log_user_id_c564eba6_fk_scaapp_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_scaapp_user_id FOREIGN KEY (user_id) REFERENCES public.scaapp_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_advisor_advice scaapp_advisor_advic_advice_id_b487071e_fk_scaapp_ca; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_advisor_advice
    ADD CONSTRAINT scaapp_advisor_advic_advice_id_b487071e_fk_scaapp_ca FOREIGN KEY (advice_id) REFERENCES public.scaapp_careeradvice(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_advisor_advice scaapp_advisor_advic_advisor_id_b2776bdb_fk_scaapp_ad; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_advisor_advice
    ADD CONSTRAINT scaapp_advisor_advic_advisor_id_b2776bdb_fk_scaapp_ad FOREIGN KEY (advisor_id) REFERENCES public.scaapp_advisor(user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_advisor scaapp_advisor_user_id_2b1136e3_fk_scaapp_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_advisor
    ADD CONSTRAINT scaapp_advisor_user_id_2b1136e3_fk_scaapp_user_id FOREIGN KEY (user_id) REFERENCES public.scaapp_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_answer scaapp_answer_question_id_e97d4a67_fk_scaapp_question_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_answer
    ADD CONSTRAINT scaapp_answer_question_id_e97d4a67_fk_scaapp_question_id FOREIGN KEY (question_id) REFERENCES public.scaapp_question(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_student_question scaapp_student_quest_question_id_59864016_fk_scaapp_qu; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_student_question
    ADD CONSTRAINT scaapp_student_quest_question_id_59864016_fk_scaapp_qu FOREIGN KEY (question_id) REFERENCES public.scaapp_question(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_student_question scaapp_student_quest_studdent_id_ccab00a2_fk_scaapp_st; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_student_question
    ADD CONSTRAINT scaapp_student_quest_studdent_id_ccab00a2_fk_scaapp_st FOREIGN KEY (studdent_id) REFERENCES public.scaapp_student(user_id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_student scaapp_student_user_id_cabbd0f7_fk_scaapp_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_student
    ADD CONSTRAINT scaapp_student_user_id_cabbd0f7_fk_scaapp_user_id FOREIGN KEY (user_id) REFERENCES public.scaapp_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_user_groups scaapp_user_groups_group_id_598cde64_fk_auth_group_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_user_groups
    ADD CONSTRAINT scaapp_user_groups_group_id_598cde64_fk_auth_group_id FOREIGN KEY (group_id) REFERENCES public.auth_group(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_user_groups scaapp_user_groups_user_id_9e82b6db_fk_scaapp_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_user_groups
    ADD CONSTRAINT scaapp_user_groups_user_id_9e82b6db_fk_scaapp_user_id FOREIGN KEY (user_id) REFERENCES public.scaapp_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_user_user_permissions scaapp_user_user_per_permission_id_5a5f3a0e_fk_auth_perm; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_user_user_permissions
    ADD CONSTRAINT scaapp_user_user_per_permission_id_5a5f3a0e_fk_auth_perm FOREIGN KEY (permission_id) REFERENCES public.auth_permission(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: scaapp_user_user_permissions scaapp_user_user_permissions_user_id_a69b2354_fk_scaapp_user_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.scaapp_user_user_permissions
    ADD CONSTRAINT scaapp_user_user_permissions_user_id_a69b2354_fk_scaapp_user_id FOREIGN KEY (user_id) REFERENCES public.scaapp_user(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taggit_taggeditem taggit_taggeditem_content_type_id_9957a03c_fk_django_co; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_content_type_id_9957a03c_fk_django_co FOREIGN KEY (content_type_id) REFERENCES public.django_content_type(id) DEFERRABLE INITIALLY DEFERRED;


--
-- Name: taggit_taggeditem taggit_taggeditem_tag_id_f4f5b767_fk_taggit_tag_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.taggit_taggeditem
    ADD CONSTRAINT taggit_taggeditem_tag_id_f4f5b767_fk_taggit_tag_id FOREIGN KEY (tag_id) REFERENCES public.taggit_tag(id) DEFERRABLE INITIALLY DEFERRED;


--
-- PostgreSQL database dump complete
--
